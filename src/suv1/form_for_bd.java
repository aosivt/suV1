/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package suv1;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author oschepkovau
 */
public class form_for_bd extends javax.swing.JFrame {

    /**
     * Creates new form form_for_bd
     */
    public form_for_bd() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("События на:");

        jLabel2.setText("События по выслуге лет:");

        jLabel4.setText("События по дням рождениям:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
String[] list_mod = new String[]{"Неделя","2 недели"};
jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(list_mod));

this.init_bd_for_dev(2,8);

        
        
    }//GEN-LAST:event_formWindowOpened

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
       /*if (this.jComboBox1.getSelectedIndex()==0)
{
this.init_bd_for_dev(2,16);
}
       else if (this.jComboBox1.getSelectedIndex()==1)
{
this.init_bd_for_dev(0,0);
}
       /**/ 
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
           if (this.jComboBox1.getSelectedIndex()==0)
{
this.init_bd_for_dev(2,8);
}
       else if (this.jComboBox1.getSelectedIndex()==1)
{
this.init_bd_for_dev(2,16);
}
           
    }//GEN-LAST:event_jComboBox1ActionPerformed
public void init_bd_for_dev(int mon,int day)
{

 Connection c;
        try {
        int years = 0;
        int months = 0;
        int days = 0;
        
GregorianCalendar chekdate_old = new GregorianCalendar();
GregorianCalendar birthday = new GregorianCalendar();
            c = DriverManager.getConnection("jdbc:hsqldb:file:settings/testdb;shutdown=true", "ok","ghbdtl");
          //  PreparedStatement ps = null;
          //  ps = c.prepareStatement("select * from gr");
Statement s = c.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            
ResultSet rs = s.executeQuery("select id_mn, first_name,second_name,patronymic, years_old,exp  "
        + "from sum_main inner join full_name on sum_main.id_fn = full_name.id_fn ");

rs.last();
int col_row = rs.getRow()+1;
String[] headers = {"ФИО", "Дата рождения"};
Object[][] text_tab = new Object[col_row][3];
rs.beforeFirst();
int id_bd = 0;
while(rs.next()) {

String dt = rs.getString("years_old");
String fn = rs.getString("first_name");

dt = (dt.substring(0, 2) + "/" + dt.substring(3, 5) + "/" + dt.substring(6, 10));
birthday = new GregorianCalendar(
              Integer.parseInt(dt.substring(6, 10)),
              Integer.parseInt(dt.substring(3, 5)),
              Integer.parseInt(dt.substring(0, 2)));

years = chekdate_old.get(GregorianCalendar.YEAR)-birthday.get(GregorianCalendar.YEAR);
months = chekdate_old.get(GregorianCalendar.MONTH)-birthday.get(GregorianCalendar.MONTH)+1;
days = chekdate_old.get(GregorianCalendar.DAY_OF_MONTH)- birthday.get(GregorianCalendar.DAY_OF_MONTH);

if (days>30){months++;days=days-30;}
if (months>=12){months=months-12;years++;}
if (months==0){if (days<0){months--;days=days+30;}}
if (months<0){years--;months=months+12;if (days<0){months--;days=days+30;}}
       

       System.err.println(fn+"||||Год:"+years+"||месяц:"+months+"|||дней:"+(days-30));
       //if (months>-mon && months<mon && days<=day && days>0)
           if (months-12>-2 && months-12<=0 && days-30<0 && days-30>-day)
       {
       System.err.println("Год:"+years+"||месяц:"+months+"|||дней:"+days);
       text_tab[id_bd][0] = rs.getString("second_name")
            + " "  + rs.getString("first_name")
            + " "  + rs.getString("patronymic");
       text_tab[id_bd][1] = rs.getString("years_old");
       String firstName = rs.getString("first_name");
       
       
       String patr = rs.getString("years_old");
       
       
       id_bd ++;
       }
}
this.jTable1.setModel(new javax.swing.table.DefaultTableModel(
            text_tab,
           headers
        ));

/*Начало формирование таблици с данными по выслуге лет*/



rs.beforeFirst();
id_bd = 0;
String exp_pay ="";
birthday = new GregorianCalendar();
headers = new String[]{"ФИО","Общий стаж","Когда будет переход","Какая выслуга"};
text_tab = new Object[col_row][5];
while(rs.next()) {


String ex = rs.getString("exp");
 
 
    

              /*Integer.parseInt(ex.substring(6, 8)),
              Integer.parseInt(ex.substring(3, 5)),
              Integer.parseInt(ex.substring(0, 2))*/
    
 chekdate_old = new GregorianCalendar(
              Integer.parseInt(ex.substring(15, 19)),
              Integer.parseInt(ex.substring(12, 14)),
              Integer.parseInt(ex.substring(9, 11)));
    
    //System.err.println(ind_x+"||"+ind_y+"|"+exp.get(GregorianCalendar.YEAR)+"||"+ex);
        
    
        years = birthday.get(GregorianCalendar.YEAR)-chekdate_old.get(GregorianCalendar.YEAR);
        months = birthday.get(GregorianCalendar.MONTH)-chekdate_old.get(GregorianCalendar.MONTH) +1;
        days = birthday.get(GregorianCalendar.DAY_OF_MONTH)- chekdate_old.get(GregorianCalendar.DAY_OF_MONTH);
        
        

        
years =  Integer.parseInt(ex.substring(0, 2)) + years;
months = Integer.parseInt(ex.substring(3, 5)) + months;
days =   Integer.parseInt(ex.substring(6, 8))  + days;

if (days>30){months++;days=days-30;}
if (months>=12){months=months-12;years++;}
if (months==0){if (days<0){months--;days=days+30;}}
if (months<0){years--;months=months+12;if (days<0){months--;days=days+30;}}


if (years <1){exp_pay = "Стаже менее года";}
else if (years >= 1 && years < 5){exp_pay = "Стаже более года";}
else if (years >= 5 && years < 10){exp_pay = "Стаже более 5 лет";}
else if (years >= 10 && years < 15){exp_pay = "Стаже более 10 лет";}
else if (years >= 15){exp_pay = "Стаже более 15 лет";}

if (days+day>30){
    
if (months+1>=12){
if (years < 1){
    
if (years+1 >= 1 && years+1 < 5){
text_tab[id_bd][0] = rs.getString("second_name")
            + " "  + rs.getString("first_name")
            + " "  + rs.getString("patronymic");
text_tab[id_bd][1] = "Лет: "+String.valueOf(years) + "/" +
               "Месяцев: "+String.valueOf(months) + "/" +
               "Дней: "+String.valueOf(days);
text_tab[id_bd][3] = exp_pay;
text_tab[id_bd][2] = "будет стаж 1 год через: " + String.valueOf(30 - days) + " дней";
 id_bd ++;
}

}

else if (years < 5){
    
if (years+1 >= 5 && years+1 < 10){
text_tab[id_bd][0] = rs.getString("second_name")
            + " "  + rs.getString("first_name")
            + " "  + rs.getString("patronymic");
text_tab[id_bd][1] = "Лет: "+String.valueOf(years) + "/" +
               "Месяцев: "+String.valueOf(months) + "/" +
               "Дней: "+String.valueOf(days);
text_tab[id_bd][3] = exp_pay;
text_tab[id_bd][2] = "будет стаж 5 год через: " + String.valueOf(30 - days) + " дней";
 id_bd ++;
}

}
else if (years < 10){
    
if (years+1 >= 10 && years+1 < 15){
text_tab[id_bd][0] = rs.getString("second_name")
            + " "  + rs.getString("first_name")
            + " "  + rs.getString("patronymic");
text_tab[id_bd][1] = "Лет: "+String.valueOf(years) + "/" +
               "Месяцев: "+String.valueOf(months) + "/" +
               "Дней: "+String.valueOf(days);
text_tab[id_bd][3] = exp_pay;
text_tab[id_bd][2] = "будет стаж 10 год через: " + String.valueOf(30 - days) + " дней";
 id_bd ++;
}

}
else if (years < 15){
    
if (years+1 >= 10 && years+1 < 15){
text_tab[id_bd][0] = rs.getString("second_name")
            + " "  + rs.getString("first_name")
            + " "  + rs.getString("patronymic");
text_tab[id_bd][1] = "Лет: "+String.valueOf(years) + "/" +
               "Месяцев: "+String.valueOf(months) + "/" +
               "Дней: "+String.valueOf(days);
text_tab[id_bd][3] = exp_pay;
text_tab[id_bd][2] = "будет стаж 15 год через: " + String.valueOf(30 - days) + " дней";
 id_bd ++;
}

}


}
        
        }
      
       
       
}

this.jTable2.setModel(new javax.swing.table.DefaultTableModel(
            text_tab,
           headers
        ));
            TableColumnModel cm = jTable2.getColumnModel();
            //cm.getColumn(0).setCellRenderer(new render());
            //cm.getColumn(2).setCellRenderer(new render());


/*Окончание формирование таблици с данными по выслуге лет*/

c.close();


        } catch (SQLException ex) {
            Logger.getLogger(new_corr.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(form_for_bd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(form_for_bd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(form_for_bd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(form_for_bd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new form_for_bd().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
